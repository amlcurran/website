{"version":3,"sources":["webpack:///./src/pages/not-tech.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotTech","_ref","data","seo","a","createElement","title","keywords","description","key","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","createContext","object","func","linkHostStyle","backgroundColor","myStyle","fontSize","paddingTop","paddingBottom","fontWeight","fontFamily","letterSpacing","linkHostInnerStyle","display","alignItems","marginTop","marginBottom","minHeight","linkInnerStyle","textAlign","externalLinkStyle","flexGrow","HeaderLink","to","text","current","react_default","gatsby_link_default","style","href","endsWith","dotIfCurrent","Header","contentStyle","className","header_HeaderLink","window","target","d","maxWidth","marginLeft","marginRight","padding","Layout","children","Fragment","header","margin","Date","getFullYear"],"mappings":"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","file":"component---src-pages-not-tech-tsx-26eb5412df17917d64f9.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\ninterface NotTechQuery {\n    \n}\n\nconst NotTech = ({ data }: { data: NotTechQuery }) => {\n    const seo = <SEO title=\"Not tech\" keywords={[`hands`, `developer`, `engineer`, `pottery`,`soap`]} description=\"Here's what I get up to when I'm not coding\" key=\"SEO\"/>\n    return (\n        <Layout seo={seo}>\n            This part of my website will be coming soon...\n            {}\n        </Layout>\n    )\n}\n\nexport default NotTech","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { Link } from \"gatsby\"\nimport React, { CSSProperties } from \"react\"\nimport { contentStyle } from \"./layout\"\n\nconst linkHostStyle: CSSProperties = {\n  backgroundColor: `rgb(255, 102, 0)`,\n}\n\nconst myStyle: CSSProperties = {\n  fontSize: 32,\n  paddingTop: 12,\n  paddingBottom: 12,\n  fontWeight: 700,\n  fontFamily: 'Raleway, sans-serif',\n  letterSpacing: '0.15rem'\n}\n\nconst linkHostInnerStyle: CSSProperties = {\n  display: \"flex\",\n  alignItems: \"center\",\n  marginTop: 0,\n  marginBottom: 12,\n  minHeight: 56\n}\n\nconst linkInnerStyle: CSSProperties = {\n  textAlign: \"center\",\n  fontFamily: 'Raleway, sans-serif',\n  letterSpacing: '0.15rem'\n}\n\nconst externalLinkStyle: CSSProperties = {\n  flexGrow: 1, \n  ...linkInnerStyle\n}\n\ninterface HeaderLinkProps {\n  to: string\n  text: string\n  current: Location\n}\n\nconst HeaderLink = ({to, text, current}: HeaderLinkProps) => (\n  <Link to={to} style={{flexGrow: 1}}>\n    <div style={linkInnerStyle}>{dotIfCurrent(to, current) + text}</div>\n  </Link>\n)\n\nfunction dotIfCurrent(to: string, current: Location): string {\n  if (current.href.endsWith(to)) {\n    return \"● \"\n  } else {\n    return \"\"\n  }\n}\n\nconst Header = () => (\n  <header>\n    <div style={{...contentStyle, ...myStyle}}>I am Alex Curran.</div>\n    <div style={linkHostStyle} className=\"emphasisBox\">\n      <div style={{...contentStyle, ...linkHostInnerStyle}}>\n        <HeaderLink to=\"/\" text=\"Home\" current={window.location} />\n        <HeaderLink to=\"/portfolio\" text=\"Portfolio\" current={window.location} />\n        <HeaderLink to=\"/talks\" text=\"Talks\" current={window.location} />\n        <HeaderLink to=\"/not-tech\" text=\"Not tech\" current={window.location} />\n        <a href=\"https://www.medium.com/@amlcurran\" style={externalLinkStyle} target=\"_blank\">⎋ Blog</a>\n      </div>\n    </div>\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React, { CSSProperties } from \"react\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport SEO from \"./seo\";\n\ninterface LayoutProps {\n  children: JSX.Element[]\n  seo: SEO\n}\n\nexport const contentStyle: CSSProperties = {\n  maxWidth: 960,\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  padding: \"0px 1.0875rem 0px 1.0875rem\"\n}\n\nconst Layout = ({ children, seo }: LayoutProps) => (\n  <>\n    {seo}\n    <Header />\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `0px 1.0875rem 1.45rem`,\n        paddingTop: 0,\n      }}\n    >\n      <main>{children}</main>\n      <footer style={{marginTop: 32}}>\n        © {new Date().getFullYear()}, Built with\n            {` `}\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </footer>\n    </div>\n  </>\n)\n\nexport default Layout\n"],"sourceRoot":""}