{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","IndexPage","_ref","data","a","createElement","seo","title","keywords","description","dangerouslySetInnerHTML","__html","markdownRemark","html","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","createContext","object","func","linkHostStyle","backgroundColor","myStyle","fontSize","paddingTop","paddingBottom","fontWeight","fontFamily","letterSpacing","linkHostInnerStyle","display","alignItems","marginTop","marginBottom","minHeight","linkInnerStyle","textAlign","externalLinkStyle","flexGrow","HeaderLink","to","text","current","react_default","gatsby_link_default","style","href","endsWith","dotIfCurrent","Header","window","contentStyle","className","header_HeaderLink","target","maxWidth","marginLeft","marginRight","padding","Layout","children","Fragment","header","margin","Date","getFullYear"],"mappings":"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","file":"component---src-pages-index-tsx-236e5d3620bd0dc78972.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { MarkdownRemark } from \"../models/remark\";\n\nconst IndexPage = ({data}: IndexQuery) => {\n  return (\n  <Layout seo={<SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} description=\"Alex Curran's portfolio website\"/>}>\n    {[<div dangerouslySetInnerHTML={{__html: data.markdownRemark.html}} />]}\n  </Layout>\n)}\n\ninterface IndexQuery {\n  data: { markdownRemark: MarkdownRemark<any>}\n}\n\nexport const pageQuery = graphql`\n  query {\n    markdownRemark(fileAbsolutePath: { glob: \"**/home.md\" }) {\n        html \n    }\n  }\n`\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { Link } from \"gatsby\"\nimport React, { CSSProperties } from \"react\"\nimport { contentStyle } from \"./layout\"\n\nconst linkHostStyle: CSSProperties = {\n  backgroundColor: `rgb(255, 102, 0)`,\n}\n\nconst myStyle: CSSProperties = {\n  fontSize: 32,\n  paddingTop: 12,\n  paddingBottom: 12,\n  fontWeight: 700,\n  fontFamily: 'Raleway, sans-serif',\n  letterSpacing: '0.15rem'\n}\n\nconst linkHostInnerStyle: CSSProperties = {\n  display: \"flex\",\n  alignItems: \"center\",\n  marginTop: 0,\n  marginBottom: 12,\n  minHeight: 56\n}\n\nconst linkInnerStyle: CSSProperties = {\n  textAlign: \"center\",\n  fontFamily: 'Raleway, sans-serif',\n  letterSpacing: '0.15rem'\n}\n\nconst externalLinkStyle: CSSProperties = {\n  flexGrow: 1, \n  ...linkInnerStyle\n}\n\ninterface HeaderLinkProps {\n  to: string\n  text: string\n  current: Location\n}\n\nconst HeaderLink = ({to, text, current}: HeaderLinkProps) => (\n  <Link to={to} style={{flexGrow: 1}}>\n    <div style={linkInnerStyle}>{dotIfCurrent(to, current) + text}</div>\n  </Link>\n)\n\nfunction dotIfCurrent(to: string, current: Location): string {\n  if (current && current.href.endsWith(to)) {\n    return \"● \"\n  } else {\n    return \"\"\n  }\n}\n\nconst Header = () => {\n  const location = typeof window !== `undefined` ? window.location : null\n  return (\n  <header>\n    <div style={{...contentStyle, ...myStyle}}>I am Alex Curran.</div>\n    <div style={linkHostStyle} className=\"emphasisBox\">\n      <div style={{...contentStyle, ...linkHostInnerStyle}}>\n        <HeaderLink to=\"/\" text=\"Home\" current={location} />\n        <HeaderLink to=\"/portfolio\" text=\"Portfolio\" current={location} />\n        <HeaderLink to=\"/talks\" text=\"Talks\" current={location} />\n        <HeaderLink to=\"/not-tech\" text=\"Not tech\" current={location} />\n        <a href=\"https://www.medium.com/@amlcurran\" style={externalLinkStyle} target=\"_blank\">⎋ Blog</a>\n      </div>\n    </div>\n  </header>\n)}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React, { CSSProperties } from \"react\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport SEO from \"./seo\";\n\ninterface LayoutProps {\n  children: JSX.Element[]\n  seo: SEO\n}\n\nexport const contentStyle: CSSProperties = {\n  maxWidth: 960,\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  padding: \"0px 1.0875rem 0px 1.0875rem\"\n}\n\nconst Layout = ({ children, seo }: LayoutProps) => (\n  <>\n    {seo}\n    <Header />\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `0px 1.0875rem 1.45rem`,\n        paddingTop: 0,\n      }}\n    >\n      <main>{children}</main>\n      <footer style={{marginTop: 32}}>\n        © {new Date().getFullYear()}, Built with\n            {` `}\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </footer>\n    </div>\n  </>\n)\n\nexport default Layout\n"],"sourceRoot":""}